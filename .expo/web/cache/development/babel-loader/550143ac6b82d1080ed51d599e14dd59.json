{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport LottieView from 'lottie-react-native';\nvar windowWidth = Dimensions.get('window').width;\n\nvar NewsScreen = function (_Component) {\n  _inherits(NewsScreen, _Component);\n\n  var _super = _createSuper(NewsScreen);\n\n  function NewsScreen() {\n    var _this;\n\n    _classCallCheck(this, NewsScreen);\n\n    _this = _super.call(this);\n\n    _this.getNews = function _callee() {\n      var url;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = 'https://saurav.tech/NewsAPI/top-headlines/category/general/in.json';\n              return _context.abrupt(\"return\", fetch(url).then(function (response) {\n                return response.json();\n              }).then(function (responseJson) {\n                _this.setState({\n                  article_data: responseJson\n                });\n              }).catch(function (error) {\n                console.error(error);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.componentDidMount = function () {\n      _this.getNews();\n    };\n\n    _this.state = {\n      article_data: []\n    };\n    return _this;\n  }\n\n  _createClass(NewsScreen, [{\n    key: \"_renderItem\",\n    value: function _renderItem(_ref) {\n      var item = _ref.item;\n      React.createElement(View, {\n        style: {\n          backgroundColor: '#aff',\n          margin: 10,\n          padding: 10,\n          borderRadius: 20\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: item.articles.urlToImage\n        },\n        style: {\n          width: '100%',\n          height: 200,\n          borderRadius: 20\n        }\n      }), React.createElement(Text, {\n        style: {\n          padding: 10,\n          margin: 10\n        }\n      }, item.articles.title), React.createElement(Text, {\n        style: {\n          fontSize: 10\n        }\n      }, item.articles.description));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.article_data === '') {\n        return React.createElement(View, {\n          style: {\n            justifyContent: 'center',\n            alignItems: 'center'\n          }\n        }, React.createElement(LottieView, {\n          source: require(\"../assets/animation/loader.json\"),\n          autoPlay: true,\n          loop: true,\n          speed: 2,\n          style: {\n            width: 200,\n            height: 200,\n            justifyContent: 'center',\n            alignItems: 'center'\n          }\n        }), React.createElement(Text, null, \"Loading....\"));\n      } else {\n        return React.createElement(FlatList, {\n          keyExtractor: function keyExtractor(item) {\n            return item.title;\n          },\n          data: this.state.article_data,\n          renderItem: function renderItem(item) {\n            return React.createElement(View, {\n              style: {\n                padding: 10,\n                margin: 10\n              }\n            }, React.createElement(Image, {\n              source: {\n                uri: item.articles.urlToImage\n              },\n              style: {\n                width: '100%',\n                height: 200,\n                borderRadius: 20\n              }\n            }), React.createElement(Text, {\n              style: {\n                padding: 10,\n                margin: 10\n              }\n            }, item.articles.title), React.createElement(Text, {\n              style: {\n                fontSize: 10\n              }\n            }, item.articles.description));\n          }\n        });\n      }\n    }\n  }]);\n\n  return NewsScreen;\n}(Component);\n\nexport { NewsScreen as default };","map":{"version":3,"sources":["D:/React native/newsapp/Screens/NewsScreen.js"],"names":["React","Component","LottieView","windowWidth","Dimensions","get","width","NewsScreen","getNews","url","fetch","then","response","json","responseJson","setState","article_data","catch","error","console","componentDidMount","state","item","backgroundColor","margin","padding","borderRadius","uri","articles","urlToImage","height","title","fontSize","description","justifyContent","alignItems","require"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, Image, ScrollView, FlatList, Dimensions } from 'react-native';\r\nimport LottieView from 'lottie-react-native';\r\n\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\nexport default class NewsScreen extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      article_data: [],\r\n    };\r\n  }\r\n\r\n  getNews = async () => {\r\n    var url = 'https://saurav.tech/NewsAPI/top-headlines/category/general/in.json';\r\n    return fetch(url)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        this.setState({\r\n          article_data: responseJson,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getNews();\r\n  };\r\n\r\n  _renderItem({ item }) {\r\n    <View style={{ backgroundColor: '#aff', margin: 10, padding: 10, borderRadius: 20 }}>\r\n      <Image\r\n        source={{ uri: item.articles.urlToImage }}\r\n        style={{ width: '100%', height: 200, borderRadius: 20 }}\r\n      />\r\n      <Text style={{ padding: 10, margin: 10 }}>{item.articles.title}</Text>\r\n      <Text style={{ fontSize: 10 }}>{item.articles.description}</Text>\r\n    </View>\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.state.article_data === '') {\r\n      return (\r\n        <View style={{ justifyContent: 'center', alignItems: 'center' }}>\r\n          <LottieView\r\n            source={require('../assets/animation/loader.json')}\r\n            autoPlay\r\n            loop={true}\r\n            speed={2}\r\n            style={{ width: 200, height: 200, justifyContent: 'center', alignItems: 'center' }}\r\n          />\r\n          <Text>Loading....</Text>\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n\r\n\r\n        // <View style={{ padding: 10, margin: 10 }}>\r\n        <FlatList\r\n          keyExtractor={(item) => item.title}\r\n          data={this.state.article_data}\r\n          renderItem={(item) => {\r\n            return (\r\n              <View style={{ padding: 10, margin: 10 }}>\r\n                <Image\r\n                  source={{ uri: item.articles.urlToImage }}\r\n                  style={{ width: '100%', height: 200, borderRadius: 20 }}\r\n                />\r\n                <Text style={{ padding: 10, margin: 10 }}>{item.articles.title}</Text>\r\n                <Text style={{ fontSize: 10 }}>{item.articles.description}</Text>\r\n              </View>\r\n            \r\n            )}}\r\n        />\r\n        // </View>\r\n      )\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}