{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport ExploreScreen from \"../Screens/ExploreScreen\";\nimport NewsScreen from \"../Screens/NewsScreen\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nvar INDICATOR_SIZE = 61;\nvar Tab = createMaterialTopTabNavigator();\n\nvar TopTabNavigation = function (_Component) {\n  _inherits(TopTabNavigation, _Component);\n\n  var _super = _createSuper(TopTabNavigation);\n\n  function TopTabNavigation() {\n    _classCallCheck(this, TopTabNavigation);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TopTabNavigation, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tab.Navigator, {\n        screenOptions: function screenOptions(_ref) {\n          var route = _ref.route;\n          return {\n            tabBarIconStyle: {\n              width: 40,\n              height: 40\n            },\n            tabBarIndicatorStyle: _objectSpread({}, styles.tabBarIndicatorStyles),\n            tabBarStyle: {\n              paddingTop: StatusBar.currentHeight,\n              marginTop: -10,\n              borderRadius: 10\n            },\n            tabBarShowLabel: false,\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var focused = _ref2.focused,\n                  color = _ref2.color,\n                  size = _ref2.size;\n              var iconName;\n\n              if (route.name === 'Explore') {\n                iconName = 'ios-home';\n                color = focused ? '#008000' : '#B22222';\n              } else if (route.name === 'News') {\n                iconName = 'md-newspaper';\n                color = focused ? 'tomato' : 'gray';\n                color = focused ? '#008000' : '#B22222';\n              }\n\n              return React.createElement(Ionicons, {\n                name: iconName,\n                size: 30,\n                color: color\n              });\n            }\n          };\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Explore\",\n        component: ExploreScreen\n      }), React.createElement(Tab.Screen, {\n        name: \"News\",\n        component: NewsScreen\n      }));\n    }\n  }]);\n\n  return TopTabNavigation;\n}(Component);\n\nexport { TopTabNavigation as default };\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: StatusBar.currentHeight,\n    width: '90%',\n    marginLeft: 20\n  },\n  tabBarIndicatorStyles: {\n    backgroundColor: '#00ff00',\n    width: INDICATOR_SIZE,\n    height: INDICATOR_SIZE,\n    left: '17%',\n    top: 20,\n    borderRadius: 30,\n    borderEndColor: '#001eaf'\n  }\n});","map":{"version":3,"sources":["D:/React native/newsapp/navigation/TopTabNavigation.js"],"names":["React","Component","createMaterialTopTabNavigator","Ionicons","ExploreScreen","NewsScreen","RFValue","INDICATOR_SIZE","Tab","TopTabNavigation","route","tabBarIconStyle","width","height","tabBarIndicatorStyle","styles","tabBarIndicatorStyles","tabBarStyle","paddingTop","StatusBar","currentHeight","marginTop","borderRadius","tabBarShowLabel","tabBarIcon","focused","color","size","iconName","name","StyleSheet","create","container","marginLeft","backgroundColor","left","top","borderEndColor"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,SAASC,6BAAT,QAA8C,qCAA9C;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,aAAP;AACA,OAAOC,UAAP;AACA,SAASC,OAAT,QAAwB,kCAAxB;AAEA,IAAMC,cAAc,GAAG,EAAvB;AAEA,IAAMC,GAAG,GAAGN,6BAA6B,EAAzC;;IAEqBO,gB;;;;;;;;;;;;;WACjB,kBAAS;AACL,aACI,oBAAC,GAAD,CAAK,SAAL;AACI,QAAA,aAAa,EAAE;AAAA,cAAGC,KAAH,QAAGA,KAAH;AAAA,iBAAgB;AAC3BC,YAAAA,eAAe,EAAE;AACbC,cAAAA,KAAK,EAAE,EADM;AAEbC,cAAAA,MAAM,EAAE;AAFK,aADU;AAK3BC,YAAAA,oBAAoB,oBACbC,MAAM,CAACC,qBADM,CALO;AAQ3BC,YAAAA,WAAW,EAAE;AACTC,cAAAA,UAAU,EAAEC,SAAS,CAACC,aADb;AAETC,cAAAA,SAAS,EAAE,CAAC,EAFH;AAGTC,cAAAA,YAAY,EAAE;AAHL,aARc;AAa3BC,YAAAA,eAAe,EAAE,KAbU;AAc3BC,YAAAA,UAAU,EAAE,2BAA8B;AAAA,kBAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,kBAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,kBAAXC,IAAW,SAAXA,IAAW;AACtC,kBAAIC,QAAJ;;AACA,kBAAIlB,KAAK,CAACmB,IAAN,KAAe,SAAnB,EAA8B;AAC1BD,gBAAAA,QAAQ,GAAG,UAAX;AACAF,gBAAAA,KAAK,GAAGD,OAAO,GAAG,SAAH,GAAe,SAA9B;AAEH,eAJD,MAIO,IAAIf,KAAK,CAACmB,IAAN,KAAe,MAAnB,EAA2B;AAC9BD,gBAAAA,QAAQ,GAAG,cAAX;AACAF,gBAAAA,KAAK,GAAGD,OAAO,GAAG,QAAH,GAAc,MAA7B;AACAC,gBAAAA,KAAK,GAAGD,OAAO,GAAG,SAAH,GAAe,SAA9B;AAEH;;AACD,qBAAO,oBAAC,QAAD;AAAU,gBAAA,IAAI,EAAEG,QAAhB;AAA0B,gBAAA,IAAI,EAAE,EAAhC;AAAoC,gBAAA,KAAK,EAAEF;AAA3C,gBAAP;AACH;AA3B0B,WAAhB;AAAA;AADnB,SA+BI,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,SAAjB;AAA2B,QAAA,SAAS,EAAEtB;AAAtC,QA/BJ,EAgCI,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,MAAjB;AAAwB,QAAA,SAAS,EAAEC;AAAnC,QAhCJ,CADJ;AAoCH;;;;EAtCyCJ,S;;SAAzBQ,gB;AAwCrB,IAAMM,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPd,IAAAA,UAAU,EAAEC,SAAS,CAACC,aADf;AAEPR,IAAAA,KAAK,EAAE,KAFA;AAGPqB,IAAAA,UAAU,EAAE;AAHL,GADkB;AAM7BjB,EAAAA,qBAAqB,EAAE;AACnBkB,IAAAA,eAAe,EAAE,SADE;AAEnBtB,IAAAA,KAAK,EAAEL,cAFY;AAGnBM,IAAAA,MAAM,EAAEN,cAHW;AAInB4B,IAAAA,IAAI,EAAE,KAJa;AAKnBC,IAAAA,GAAG,EAAE,EALc;AAMnBd,IAAAA,YAAY,EAAE,EANK;AAOnBe,IAAAA,cAAc,EAAE;AAPG;AANM,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { StatusBar, Image, StyleSheet, Platform } from \"react-native\"\r\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport ExploreScreen from \"../Screens/ExploreScreen\";\r\nimport NewsScreen from \"../Screens/NewsScreen\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\n\r\nconst INDICATOR_SIZE = 61;\r\n\r\nconst Tab = createMaterialTopTabNavigator()\r\n\r\nexport default class TopTabNavigation extends Component {\r\n    render() {\r\n        return (\r\n            <Tab.Navigator\r\n                screenOptions={({ route }) => ({\r\n                    tabBarIconStyle: {\r\n                        width: 40,\r\n                        height: 40,\r\n                    },\r\n                    tabBarIndicatorStyle: {\r\n                        ...styles.tabBarIndicatorStyles\r\n                    },\r\n                    tabBarStyle: {\r\n                        paddingTop: StatusBar.currentHeight,\r\n                        marginTop: -10,\r\n                        borderRadius: 10,\r\n                    },\r\n                    tabBarShowLabel: false,\r\n                    tabBarIcon: ({ focused, color, size }) => {\r\n                        let iconName\r\n                        if (route.name === 'Explore') {\r\n                            iconName = 'ios-home'\r\n                            color = focused ? '#008000' : '#B22222'\r\n                            \r\n                        } else if (route.name === 'News') {\r\n                            iconName = 'md-newspaper'\r\n                            color = focused ? 'tomato' : 'gray'\r\n                            color = focused ? '#008000' : '#B22222'\r\n\r\n                        }\r\n                        return <Ionicons name={iconName} size={30} color={color} />\r\n                    },\r\n                })}\r\n            >\r\n                <Tab.Screen name=\"Explore\" component={ExploreScreen} />\r\n                <Tab.Screen name=\"News\" component={NewsScreen} />\r\n            </Tab.Navigator>\r\n        )\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        paddingTop: StatusBar.currentHeight,\r\n        width: '90%',\r\n        marginLeft: 20\r\n    },\r\n    tabBarIndicatorStyles: {\r\n        backgroundColor: '#00ff00',\r\n        width: INDICATOR_SIZE,\r\n        height: INDICATOR_SIZE,\r\n        left: '17%',\r\n        top: 20,\r\n        borderRadius: 30,\r\n        borderEndColor: '#001eaf',\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}